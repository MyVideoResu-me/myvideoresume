@inject NavigationManager NavigationManager
@inject IConfiguration Configuration
<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-0XKCJD56BP"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-0XKCJD56BP');
    </script>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="@NavigationManager.BaseUri" />
    <RadzenTheme @rendermode="@InteractiveServer" Theme="standard-dark" />
    <link href="_content/Blazor.Bootstrap/blazor.bootstrap.css" rel="stylesheet" />
    <link rel="stylesheet" href="css/site.css?v=2.2.1.0" />
    <ImportMap />
    <link rel="icon" href="favicon.ico" />
    <link href="manifest.json" rel="manifest" />
    <link rel="apple-touch-icon" sizes="512x512" href="icon-512.png" />
    <link href="https://vjs.zencdn.net/7.10.2/video-js.css" rel="stylesheet" />
    <HeadOutlet @rendermode="@InteractiveServer" />
    <script type="text/javascript" src="3rdparty.js?v=2.2.1.0">
    </script>
</head>

<body>
    <Routes @rendermode="@InteractiveServer" />
    <script src=@($"https://www.google.com/recaptcha/api.js?render={Configuration.GetValue<string>("Security:Captcha_SiteKey")}")></script>
    <script>
        runCaptcha = function (actionName) {
            return new Promise((resolve, reject) => {
                grecaptcha.ready(function () {
                    grecaptcha.execute('@($"{Configuration.GetValue<string>("Security:Captcha_SiteKey")}")', { action: 'submit' }).then(function (token) {
                        resolve(token);
                    });
                });
            });
        };
    </script>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
    <script>navigator.serviceWorker.register('service-worker.js');</script>
    <script src="_content/Blazor.Bootstrap/blazor.bootstrap.js"></script>
    <script src="https://vjs.zencdn.net/7.10.2/video.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/videojs-youtube/2.6.1/Youtube.min.js"></script>
    <script src="player.js?v=2.2.1.0"></script>
    <script src="resumeActions.js?v=2.2.1.0"></script>
</body>

</html>

@code {

    [CascadingParameter]
    private HttpContext HttpContext { get; set; }

    [Inject]
    private ThemeService ThemeService { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (HttpContext != null)
        {
            var theme = HttpContext.Request.Cookies["MyVideoResumeTheme"];

            if (!string.IsNullOrEmpty(theme))
            {
                ThemeService.SetTheme(theme, false);
            }
        }
    }
}
