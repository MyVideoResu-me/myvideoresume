@page "/tasks"@inherits TaskBaseComponent@layout MainLayout<PageTitle>MyVideoResu.ME - Tasks</PageTitle><RadzenRow>    <RadzenColumn Size="11">        <CreateTaskOptionsComponent Created=@Created></CreateTaskOptionsComponent>        <RadzenText Text="Tasks" TextStyle="Radzen.Blazor.TextStyle.DisplayH2" TagName="Radzen.Blazor.TagName.Auto"></RadzenText>        <RadzenCard>            <AuthorizeView>                <Authorized>                    <RadzenDataGrid Responsive=true AllowFiltering="false" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Simple" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" Data="@Items" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" @bind-Value=@SelectedItems>                        <Columns>                            <RadzenDataGridColumn Width="50px" Title="#" Filterable="false" Sortable="false" TextAlign="TextAlign.Center">                                <Template Context="data">                                    @(Items.IndexOf(data) + 1)                                </Template>                            </RadzenDataGridColumn>                            <RadzenDataGridColumn Property="@nameof(TaskDTO.Text)" Title="Item" Frozen="true">                                <Template Context="data">                                    <div style=" max-width: 250px; "><RadzenText style="text-overflow:ellipsis; white-space: nowrap; overflow: hidden;" TextStyle="TextStyle.Body1" title="@(data.Text)">@(data.Text)</RadzenText></div>                                </Template>                            </RadzenDataGridColumn>                            <RadzenDataGridColumn Width="75px" Property="@nameof(TaskDTO.CreationDateTime)" Title="Date Created" Frozen="false" />                            <RadzenDataGridColumn Title="Actions" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Frozen="false">                                <Template Context="data">                                    <TaskActionsPanelComponent Item=data Deleted=DeleteCompletedHandler></TaskActionsPanelComponent>
                                </Template>                            </RadzenDataGridColumn>                        </Columns>                    </RadzenDataGrid>                </Authorized>                <NotAuthorized>                    <UnAuthorizedComponent Path=@Paths.Tasks_View></UnAuthorizedComponent>                </NotAuthorized>            </AuthorizeView>        </RadzenCard>    </RadzenColumn></RadzenRow>@code {
    public bool DisplayItem(TaskDTO item)
    {
        var result = false;
        result = item.CreatedByUserId == Security.User.Id;
        return result;
    }

    protected async Task Delete(TaskDTO item)
    {        var result = new ResponseResult();
        result = await Service.TaskDelete(item.Id);
        await ShowNotification(result);
    }

    private async Task ShowNotification(ResponseResult result)
    {
        if (result.ErrorMessage.HasValue())
        {
            ShowErrorNotification("Failed to Delete", string.Empty);
        }
        else
        {
            ShowSuccessNotification("Job Deleted", string.Empty);
            Items = await Service.TasksRead();
        }
    }

    async Task DeleteCompletedHandler(ResponseResult result)
    {
        await ShowNotification(result);
    }



    protected async Task Created(string result)
    {
        if (result.HasValue())
            Items = await Service.TasksRead();
    }

}