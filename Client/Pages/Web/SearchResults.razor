@page "/search-results"@rendermode InteractiveServer@inherits BaseComponent@using MyVideoResume.Client.Pages.App.People.Resumes<HeadContent>    <meta name="description" content="Resume Search Results" /></HeadContent><SearchComponent     FilterSelected=@Filter     QuerySelected=@Query     EducationSelected=@Education     ExperienceSelected=@Experience     RadiusSelected=@Radius></SearchComponent><RadzenRow Gap="5" RowGap="5">    <RadzenColumn Size="12">        <RadzenCard>            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">                <RadzenText TextStyle="TextStyle.H5">Resume Search Results</RadzenText>                <RadzenText>Found @searchResults.Count resumes</RadzenText>            </RadzenStack>                        @if (isLoading)            {                <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />            }            else if (searchResults.Count == 0)            {                <RadzenAlert AlertStyle="AlertStyle.Info" Shade="Shade.Lighter" Size="AlertSize.Medium">                    No resumes found matching your search criteria.                </RadzenAlert>            }            else            {                <RadzenRow>                    <ResumeDisplayPreviewComponent ResumeItems="@searchResults" Visible="true"></ResumeDisplayPreviewComponent>                </RadzenRow>            }        </RadzenCard>    </RadzenColumn></RadzenRow><script>    function BlazorSetTitle(title, filter) {        let titleValue = "";        if (title != null)            titleValue += " - " + title;        if (filter != null)            titleValue += " - " + filter;        document.title = "MyVideoResu.ME - Resume Search Results" + titleValue;    }        function getUserLocation() {        return new Promise((resolve, reject) => {            if (navigator.geolocation) {                navigator.geolocation.getCurrentPosition(                    (position) => {                        resolve({                            latitude: position.coords.latitude,                            longitude: position.coords.longitude                        });                    },                    (error) => {                        reject(error);                    }                );            } else {                reject(new Error("Geolocation is not supported by this browser."));            }        });    }</script>
